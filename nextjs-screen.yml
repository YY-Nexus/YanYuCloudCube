name: Next.js初查筛选
on: [push, pull_request]

jobs:
  screen:
    runs-on: ubuntu-latest
    steps:
      - name: 拉取代码
        uses: actions/checkout@v4

      - name: 检查package.json是否存在
        run: |
          if [ ! -f "package.json" ]; then
            echo "❌ 未找到package.json，非Node.js项目"
            exit 1
          fi

      - name: 解析Next.js版本
        id: next_version
        run: |
          next_version=$(jq -r '.dependencies.next // "not_found"' package.json)
          echo "version=$next_version" >> $GITHUB_OUTPUT
          if [ "$next_version" = "not_found" ]; then
            echo "❌ 项目未依赖Next.js"
            exit 1
          fi

      - name: 检查Next.js版本是否≥14
        run: |
          next_version="${{ steps.next_version.outputs.version }}"
          if [[ "$next_version" != *"14."* && "$next_version" != *"15."* ]]; then
            echo "❌ Next.js版本为$next_version，低于要求的14.x"
            exit 1
          else
            echo "✅ Next.js版本符合要求（$next_version）"
          fi

      - name: 设置Node.js环境
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'  # 匹配Next.js 14推荐的LTS版本
          cache: 'npm'

      - name: 安装依赖
        run: npm ci  # 严格按package-lock.json安装，避免版本偏差

      - name: 检查依赖兼容性
        run: |
          if npm ls next react react-dom | grep -q "UNMET DEPENDENCY"; then
            echo "❌ 存在未满足的依赖"
            exit 1
          fi

      - name: 构建测试（核心验证）
        run: npm run build
        env:
          CI: true  # 避免构建过程中的交互提示